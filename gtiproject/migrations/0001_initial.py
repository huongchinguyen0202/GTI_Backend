# Generated by Django 3.0.5 on 2020-04-08 16:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=3000)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('1', 'Pending'), ('2', 'Matched'), ('3', 'Scoping'), ('4', 'Project Activated'), ('5', 'Completed'), ('6', 'Closed')], default='1', max_length=1)),
                ('request_anonymity', models.BooleanField(default=False)),
                ('country', models.ManyToManyField(related_name='country', to='tags.Tag')),
                ('professional_background', models.ManyToManyField(related_name='professional_background', to='tags.Tag')),
                ('professional_service', models.ManyToManyField(related_name='professional_service', to='tags.Tag')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtiproject.Project')),
                ('region', models.ManyToManyField(related_name='region', to='tags.Tag')),
                ('relevant_qualification', models.ManyToManyField(related_name='relevant_qualification', to='tags.Tag')),
                ('specialist_knowledge_key_issue_theme', models.ManyToManyField(related_name='specialist_knowledge_key_issue_theme', to='tags.Tag')),
                ('specialist_knowledge_sector', models.ManyToManyField(related_name='specialist_knowledge_sector', to='tags.Tag')),
            ],
        ),
    ]
